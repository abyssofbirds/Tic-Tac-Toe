{"version":3,"sources":["TicTacElement.js","services/popupService/index.js","services/TicTacToeGame/index.js","services/random.js","App.js","index.js"],"names":["handleChangeTable","elem","position","className","onClick","popupService","title","options","Swal","fire","width","padding","confirmButtonText","background","backdrop","game","state","squareSize","this","Array","fill","__makeUserStep","__makeAIStep","newState","getState","console","log","concat","includes","__checkWinBySymbol","symbol","__isHasWinLinesBySymbol","__isHasWinDiagonalsBySymbol","lines","i","length","push","slice","columns","columnIndex","column","diagonals","diagonal","__splitStateByHorizontalLines","find","line","every","cell","__splitStateByVerticalLines","__splitStateByDiagonalLines","freeSquares","nextEmptyCellIndex","indexOf","from","to","__findEmptyCells","randomElement","Math","floor","random","App","useState","gameTable","updateGameTable","handleGameStep","num","ticTacToeGame","makeStep","checkWin","alertWin","checkFail","alertLoser","isEmptyCellsExists","alertEndOfGame","resetGame","createNewGame","useEffect","then","result","isConfirmed","customClass","confirmButton","TicTacElement","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09f4220a.chunk.js","sourcesContent":["import React from \"react\";\n\n/**\n * @param {function} handleChangeTable\n * @param elem\n * @param position\n * @return {JSX.Element}\n */\nexport default ({ handleChangeTable, elem, position }) => (\n  <td\n    className=\"border square align-middle text-uppercase\"\n    onClick={() => handleChangeTable(position)}\n  >\n    {elem}\n  </td>\n);\n","import Swal from \"sweetalert2\";\n\nclass PopupService {\n  /**\n   * @param title\n   * @param {object} options\n   */\n  fire(title, options = {}) {\n    return Swal.fire({\n      title,\n      width: 600,\n      padding: \"3em\",\n      confirmButtonText: `Ok`,\n      background: \"#fff url(/images/trees.png)\",\n      backdrop: `\n              rgba(0,0,123,0.4)\n              url(\"https://c.tenor.com/5P2BiFhQVEsAAAAi/don%27t-know-confusing.gif\")\n              right bottom\n              no-repeat\n            `,\n      ...options,\n    });\n  }\n}\n\nconst popupService = new PopupService();\nexport default popupService;\n","import { randomRange } from \"../random\";\n\nclass TicTacToeGame {\n  /** @type {string[]} */\n  state = null;\n  /** @type {number} */\n  squareSize;\n\n  /**\n   * @param {number} squareSize\n   * @return {string[]}\n   */\n  createNewGame(squareSize = 3) {\n    this.squareSize = squareSize;\n    this.state = new Array(squareSize * squareSize).fill(\"\");\n    return this.state;\n  }\n\n  makeStep(position) {\n    this.__makeUserStep(position);\n    this.__makeAIStep();\n  }\n\n  __makeUserStep(position) {\n    let newState = this.getState();\n    if (newState[position - 1] === \"\") {\n      newState[position - 1] = \"x\";\n    }\n    this.state = newState;\n  }\n\n  /** @return string[] */\n  getState() {\n    console.log(this.state, \"THIS STATE\");\n    return this.state.concat();\n  }\n\n  /** @return boolean */\n  isEmptyCellsExists() {\n    return this.state.includes(\"\");\n  }\n\n  /** @return boolean */\n  checkWin() {\n    return this.__checkWinBySymbol(\"x\");\n  }\n\n  /** @return boolean */\n  checkFail() {\n    return this.__checkWinBySymbol(\"o\");\n  }\n\n  /** @return boolean */\n  __checkWinBySymbol(symbol) {\n    return (\n      this.__isHasWinLinesBySymbol(symbol) ||\n      this.__isHasWinDiagonalsBySymbol(symbol)\n    );\n  }\n\n  /** @return string[] */\n  __splitStateByHorizontalLines() {\n    let state = this.getState();\n    console.log({ state });\n    const lines = [];\n    for (let i = 0; i < this.state.length; i += this.squareSize) {\n      lines.push(state.slice(i, i + this.squareSize));\n    }\n    return lines;\n  }\n\n  /** @return string[] */\n  __splitStateByVerticalLines() {\n    let state = this.getState();\n\n    // console.log(\"state\", state);\n    const columns = [];\n\n    for (let columnIndex = 0; columnIndex < this.squareSize; columnIndex++) {\n      const column = [];\n      for (let i = 0; i < this.state.length; i += this.squareSize) {\n        column.push(state[i + columnIndex]);\n      }\n      columns.push(column);\n    }\n\n    console.log(\"__splitStateByVerticalLines\", columns);\n    return columns;\n  }\n\n  /** @return string[] */\n  __splitStateByDiagonalLines() {\n    let state = this.getState();\n    const diagonals = [];\n\n    let diagonal = [];\n    for (let i = 0; i < this.state.length; i += this.squareSize + 1) {\n      diagonal.push(state[i]);\n    }\n    diagonals.push(diagonal);\n\n    diagonal = [];\n    for (let i = 0; i < this.state.length; i += this.squareSize - 1) {\n      diagonal.push(state[i]);\n    }\n    diagonals.push(diagonal);\n\n    return diagonals;\n  }\n\n  /**\n   * @param {string} symbol\n   * @private\n   */\n  __isHasWinLinesBySymbol(symbol) {\n    const winByHorizontal = this.__splitStateByHorizontalLines().find(\n      (line) => {\n        return line.every((cell) => cell === symbol);\n      }\n    );\n    if (winByHorizontal) return true;\n    const winByVertical = this.__splitStateByVerticalLines().find((line) => {\n      return line.every((cell) => cell === symbol);\n    });\n    if (winByVertical) return true;\n    return false;\n  }\n\n  /**\n   * @param {string} symbol\n   * @private\n   */\n  __isHasWinDiagonalsBySymbol(symbol) {\n    return this.__splitStateByDiagonalLines().find((line) => {\n      return line.every((cell) => cell === symbol);\n    });\n  }\n\n  /**\n   * @private\n   */\n  __findEmptyCells() {\n    const freeSquares = [];\n    let nextEmptyCellIndex = this.state.indexOf(\"\");\n    while (nextEmptyCellIndex !== -1) {\n      freeSquares.push(nextEmptyCellIndex);\n      nextEmptyCellIndex = this.state.indexOf(\"\", nextEmptyCellIndex + 1);\n    }\n    return freeSquares;\n  }\n\n  /**\n   * @private\n   */\n  __makeAIStep() {\n    const freeSquares = this.__findEmptyCells();\n    const randomElement = freeSquares[randomRange(0, freeSquares.length)];\n    let state = this.getState();\n    state[randomElement] = \"o\";\n    this.state = state;\n  }\n}\n\nconst game = new TicTacToeGame();\nexport default game;\n","export function randomRange(from, to) {\n  return Math.floor(from + Math.random() * (to - from));\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\n\nimport TicTacElement from \"./TicTacElement\";\n\nimport popupService from \"./services/popupService\";\nimport ticTacToeGame from \"./services/TicTacToeGame\";\n\nconst App = () => {\n  const [gameTable, updateGameTable] = useState(new Array(9).fill(\"\"));\n\n  useEffect(() => {\n    ticTacToeGame.createNewGame();\n    updateGameTable(ticTacToeGame.getState());\n  }, []);\n\n  function handleGameStep(num) {\n    ticTacToeGame.makeStep(num);\n    updateGameTable(ticTacToeGame.getState());\n\n    if (ticTacToeGame.checkWin()) {\n      alertWin();\n      return;\n    }\n    if (ticTacToeGame.checkFail()) {\n      alertLoser();\n      return;\n    }\n    if (!ticTacToeGame.isEmptyCellsExists()) {\n      alertEndOfGame();\n      return;\n    }\n  }\n\n  function resetGame() {\n    ticTacToeGame.createNewGame();\n    updateGameTable(ticTacToeGame.getState());\n  }\n\n  const alertEndOfGame = () => {\n    popupService.fire(\"Игра окончена. Ничья &#128528;\").then((result) => {\n      if (!result.isConfirmed) return;\n      resetGame();\n    });\n  };\n\n  const alertWin = () => {\n    popupService\n      .fire(\"Вы выиграли!!!\", {\n        backdrop: `\n              rgba(0,0,123,0.4)\n              url(\"https://i.pinimg.com/originals/4a/db/ca/4adbca36f44b37005a6f0c685f36117d.gif\")\n              left top\n              no-repeat\n        `,\n      })\n      .then((result) => {\n        if (!result.isConfirmed) return;\n        resetGame();\n      });\n  };\n\n  const alertLoser = () => {\n    popupService\n      .fire(\"Вы проиграли(((\", {\n        customClass: {\n          confirmButton: \"order-2\",\n        },\n        backdrop: `\n          rgba(0,0,123,0.4)\n          url(\"https://media1.giphy.com/media/l4FGrgquGXeNOS8aA/giphy.gif\")\n          right bottom\n          no-repeat\n        `,\n      })\n      .then((result) => {\n        if (!result.isConfirmed) return;\n        resetGame();\n      });\n  };\n\n  return (\n    <div className=\"mx-auto mt-5 my-app\">\n      <h1 className=\"text-center font-weight-bold text-logo\">Tic-Tac-Toe</h1>\n      <table className=\"table-bordered mx-auto mt-5\">\n        <tbody>\n          <tr>\n            <TicTacElement\n              elem={gameTable[0]}\n              handleChangeTable={handleGameStep}\n              position={1}\n            />\n            <TicTacElement\n              elem={gameTable[1]}\n              handleChangeTable={handleGameStep}\n              position={2}\n            />\n            <TicTacElement\n              elem={gameTable[2]}\n              handleChangeTable={handleGameStep}\n              position={3}\n            />\n          </tr>\n          <tr>\n            <TicTacElement\n              elem={gameTable[3]}\n              handleChangeTable={handleGameStep}\n              position={4}\n            />\n            <TicTacElement\n              elem={gameTable[4]}\n              handleChangeTable={handleGameStep}\n              position={5}\n            />\n            <TicTacElement\n              elem={gameTable[5]}\n              handleChangeTable={handleGameStep}\n              position={6}\n            />\n          </tr>\n          <tr>\n            <TicTacElement\n              elem={gameTable[6]}\n              handleChangeTable={handleGameStep}\n              position={7}\n            />\n            <TicTacElement\n              elem={gameTable[7]}\n              handleChangeTable={handleGameStep}\n              position={8}\n            />\n            <TicTacElement\n              elem={gameTable[8]}\n              handleChangeTable={handleGameStep}\n              position={9}\n            />\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}